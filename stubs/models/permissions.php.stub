<?php

namespace {{namespace}};

use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Winavin\Permissions\Models\Permission;

class {{Prefix}}Permissions extends Permission
{
    protected $table = '{{prefix}}_permissions';

    protected function casts() : array
    {
        return [
            'permission' => $this->resolvePermissionEnumCast(),
        ];
    }

    protected function resolvePermissionEnumCast(): string
    {
        // return match ($this->team_type) {
        //  Organization::class => \App\Enums\OrganizationPermission::class,
        //  Division::class     => \App\Enums\DivisionPermission::class,
        //  default             => 'string', // fallback
        // };

        // You can hardcode enum class as above or below code will resolve it dynamically
        // Delete below code if you want to hardcode enum class

        foreach (config('permissions.models.teams', []) as $teamModel) {
            if ($this->team_type === $teamModel) {

                // Strip root namespace (e.g., App\Models\) and convert to Enum namespace
                $enumClass = (string) str($teamModel)->replace("Models", "Enums")->append("Permission");

                if (class_exists($enumClass)) {
                    return $enumClass;
                }
            }
        }

        return 'string'; // fallback if no match found
    }


    public function {{prefix}}(): BelongsTo
    {
        return $this->belongsTo({{Prefix}}::class);
    }
}
